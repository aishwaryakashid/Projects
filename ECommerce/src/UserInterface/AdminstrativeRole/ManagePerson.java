/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminstrativeRole;

import Business.Organization.CustomerOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Organization.SupplierOrganization;
import Business.Person.Customer;

import Business.Person.Person;
import Business.Person.PersonDirectory;
import Business.Person.Supplier;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Praneet
 */
public class ManagePerson extends javax.swing.JPanel {

    /**
     * Creates new form ManageCustomers
     */
     JPanel userProcessContainer;
     private OrganizationDirectory organizationDir;
     PersonDirectory personDirectory;
    public ManagePerson(JPanel upc, OrganizationDirectory organizationDir) {
        
        initComponents();
        this.organizationDir= organizationDir;
        this.userProcessContainer = upc;
        populateOrganizationComboBox();
        populateOrganizationEmpComboBox();
    }
    
    public void populateOrganizationComboBox(){
        organizationJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            organizationJComboBox.addItem(organization);
        }
    }
    
     public void populateOrganizationEmpComboBox(){
        organizationEmpJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            organizationEmpJComboBox.addItem(organization);
        }
    }
    
    private void refreshTable(Organization organization) {
         
        DefaultTableModel model = (DefaultTableModel) personTable.getModel();
        
        model.setRowCount(0);
        
        
        for(Person p : organization.getPersonDirectory().getPersonList()) {
            Object row[] = new Object[3];
            row[0] = p;
            row[1] = p.getFirstName() + " "+p.getLastName();
            row[2] = p.getEmailID();
            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        removejButton1 = new javax.swing.JButton();
        customerJScroll = new javax.swing.JScrollPane();
        personTable = new javax.swing.JTable();
        refreshjButton3 = new javax.swing.JButton();
        backjButton2 = new javax.swing.JButton();
        organizationEmpJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        emailIDJTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        firstNamejTex = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lastNameJTxt = new javax.swing.JTextField();
        addjButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        removejButton1.setText("Remove");
        removejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removejButton1ActionPerformed(evt);
            }
        });
        add(removejButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 460, -1, -1));

        personTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Name", "Email ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerJScroll.setViewportView(personTable);
        if (personTable.getColumnModel().getColumnCount() > 0) {
            personTable.getColumnModel().getColumn(0).setResizable(false);
            personTable.getColumnModel().getColumn(1).setResizable(false);
            personTable.getColumnModel().getColumn(2).setResizable(false);
        }

        add(customerJScroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 420, 97));

        refreshjButton3.setText("Refresh");
        refreshjButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshjButton3ActionPerformed(evt);
            }
        });
        add(refreshjButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        backjButton2.setText("<<Back");
        backjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton2ActionPerformed(evt);
            }
        });
        add(backjButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, -1, -1));

        add(organizationEmpJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, 130, -1));

        jLabel3.setText("Organization");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, -1, 20));

        jLabel1.setText("Organization");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });
        add(organizationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 110, -1));

        jLabel4.setText("Email ID");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 410, -1, -1));
        add(emailIDJTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 400, 115, -1));

        jLabel5.setText("First Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 330, -1, -1));
        add(firstNamejTex, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, 114, -1));

        jLabel6.setText("Last Name");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, -1, -1));
        add(lastNameJTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 370, 115, -1));

        addjButton.setText("ADD Person");
        addjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addjButtonActionPerformed(evt);
            }
        });
        add(addjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 460, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void removejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removejButton1ActionPerformed
//        // TODO add your handling code here:
//        int row = personTable.getSelectedRow();
//
//        if(row<0) {
//            JOptionPane.showMessageDialog(null,"Please select a row to Remove","Warning",JOptionPane.WARNING_MESSAGE);
//
//            return;
//        }
//        Customer c = (Customer)personTable.getValueAt(row, 0);
//       personDirectory.removePerson(c);
//        refreshTable(Organization organization);
    }//GEN-LAST:event_removejButton1ActionPerformed

    private void refreshjButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshjButton3ActionPerformed
        // TODO add your handling code here:
     //   refreshTable();
    }//GEN-LAST:event_refreshjButton3ActionPerformed

    private void backjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton2ActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        if (organization != null){
            refreshTable(organization);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void addjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addjButtonActionPerformed
        // TODO add your handling code here:
         Organization organization = (Organization) organizationEmpJComboBox.getSelectedItem();
        String firstName = firstNamejTex.getText().trim();
        String email = emailIDJTxt.getText().trim();
        String lastName = lastNameJTxt.getText().trim();
        if(firstName.length() == 0 | firstName == null | email.length() == 0 | email == null | lastName.length() == 0 | lastName == null )
        {
            JOptionPane.showMessageDialog(null,"Please enter values in all fields");
        }
        else{
//            String a= null;
//           if( organization instanceof SupplierOrganization) {
//            a = "s";
////           Supplier supplier = (Supplier)organization.getPersonDirectory().addPerson(firstName,lastName,email);
//        }
////            
//            else if (organization instanceof CustomerOrganization) 
//            {
//                a = "c";
//              //  Customer customer = (Customer)organization.getPersonDirectory().addPerson(firstName,lastName,email);
//            }
            organization.getPersonDirectory().addPerson(firstName,lastName,email, organization);
    }//GEN-LAST:event_addjButtonActionPerformed

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addjButton;
    private javax.swing.JButton backjButton2;
    private javax.swing.JScrollPane customerJScroll;
    private javax.swing.JTextField emailIDJTxt;
    private javax.swing.JTextField firstNamejTex;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField lastNameJTxt;
    private javax.swing.JComboBox organizationEmpJComboBox;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable personTable;
    private javax.swing.JButton refreshjButton3;
    private javax.swing.JButton removejButton1;
    // End of variables declaration//GEN-END:variables
}
