/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerRole;

import Business.Person.Customer;
import Business.Order.MasterOrderCatalog;
import Business.Order.Order;
import Business.Order.OrderItem;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Praneet
 */
public class CustomerOrderHistory extends javax.swing.JPanel {

    /**
     * Creates new form CustomerOrderHistory
     */
    private JPanel userProcessContainer;
    Customer customer;
    MasterOrderCatalog masterOrderCatalog;
    public CustomerOrderHistory(JPanel upc,  Customer c, MasterOrderCatalog moc) {
        initComponents();
        this.userProcessContainer = upc;
        this.customer = c;
        masterOrderCatalog=moc;
        customerNameTxt.setText(customer.getFirstName());
        populateOrderHistory();
    }

     private void populateOrderHistory()
    {
        DefaultTableModel dtm = (DefaultTableModel)orderHistoryJTable.getModel();
        dtm.setRowCount(0);
               int rowCount = orderHistoryJTable.getRowCount();

        for(int i = rowCount - 1; i >=0; i--) {
            dtm.removeRow(i);}
        
        for(Order order : masterOrderCatalog.getOrderCatalog())
        {
            if(customer.getFirstName().equals(order.getCustomer().getFirstName())){
            Object row[] = new Object[3];
            row[0] = order;
            row[1] = order.getOrderItemList();
            row[2] = order.getTimeStamp();
              
            dtm.addRow(row);
            }
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderHistoryJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderItemJTable = new javax.swing.JTable();
        listOrderItemJBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        customerNameTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Order History");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 11, 129, -1));

        orderHistoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order", "Product", "Date/Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderHistoryJTable);
        if (orderHistoryJTable.getColumnModel().getColumnCount() > 0) {
            orderHistoryJTable.getColumnModel().getColumn(0).setResizable(false);
            orderHistoryJTable.getColumnModel().getColumn(1).setResizable(false);
            orderHistoryJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 36, 375, 98));

        orderItemJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Quantity", "Sales Price", "Date/Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderItemJTable);
        if (orderItemJTable.getColumnModel().getColumnCount() > 0) {
            orderItemJTable.getColumnModel().getColumn(0).setResizable(false);
            orderItemJTable.getColumnModel().getColumn(1).setResizable(false);
            orderItemJTable.getColumnModel().getColumn(2).setResizable(false);
            orderItemJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 218, 375, 91));

        listOrderItemJBtn.setText("View Order Item");
        listOrderItemJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listOrderItemJBtnActionPerformed(evt);
            }
        });
        add(listOrderItemJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 163, -1, -1));

        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));

        customerNameTxt.setEnabled(false);
        add(customerNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 60, -1));

        jLabel2.setText("Hello");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void listOrderItemJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listOrderItemJBtnActionPerformed
        // TODO add your handling code here:
         int selectedRow = orderHistoryJTable.getSelectedRow();
         if (selectedRow < 0)
         {
             JOptionPane.showMessageDialog(null,"Please select a row to contine");
             return;
             
         }
         
         else
         {
              Order order = (Order)orderHistoryJTable.getValueAt(selectedRow, 0);
              DefaultTableModel dtm = (DefaultTableModel)orderItemJTable.getModel();
        dtm.setRowCount(0);
        int rowCount = orderItemJTable.getRowCount();

        for(int i = rowCount - 1; i >=0; i--) {
            dtm.removeRow(i);}
        for(OrderItem orderItem : order.getOrderItemList())
        {
            Object row[] = new Object[4];
            row[0] = orderItem;
            row[1] = orderItem.getQuantity();
            row[2] = orderItem.getSalesPrice()*orderItem.getQuantity();
            row[3] = orderItem.getTimeStamp();
          
            dtm.addRow(row);
        }
         }
         
    }//GEN-LAST:event_listOrderItemJBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField customerNameTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton listOrderItemJBtn;
    private javax.swing.JTable orderHistoryJTable;
    private javax.swing.JTable orderItemJTable;
    // End of variables declaration//GEN-END:variables
}
